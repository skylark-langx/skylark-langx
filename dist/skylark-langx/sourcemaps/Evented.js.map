{"version":3,"sources":["Evented.js"],"names":["define","klass","arrays","objects","types","slice","Array","prototype","compact","isDefined","isPlainObject","isFunction","isString","isEmptyObject","mixin","on","events","selector","data","callback","ctx","one","self","this","_hub","each","type","fn","undefined","split","forEach","name","push","trigger","e","CustomEvent","Object","defineProperty","value","args","call","arguments","concat","eventName","listeners","len","length","reCompact","i","listener","apply","listened","event","_events","listenTo","obj","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","indexOf","listenToOnce","off","evts","liveEvents","_","unlistenTo","j"],"mappings":"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","file":"../Evented.js","sourcesContent":["define([\r\n    \"./klass\",\r\n    \"./arrays\",\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(klass,arrays,objects,types){\r\n\tvar slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n\t\tisFunction = types.isFunction,\r\n\t\tisString = types.isString,\r\n\t\tisEmptyObject = types.isEmptyObject,\r\n\t\tmixin = objects.mixin;\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\treturn Evented;\r\n\r\n})"]}