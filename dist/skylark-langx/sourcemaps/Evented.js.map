{"version":3,"sources":["Evented.js"],"names":["define","klass","arrays","objects","types","slice","Array","prototype","compact","isDefined","isPlainObject","isFunction","isString","isEmptyObject","mixin","parse","event","segs","split","name","ns","join","on","events","selector","data","callback","ctx","one","self","this","_hub","each","type","fn","undefined","forEach","parsed","push","trigger","e","CustomEvent","Object","defineProperty","value","args","call","arguments","concat","eventName","listeners","len","length","reCompact","i","listener","apply","listened","_events","listenTo","obj","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","indexOf","listenToOnce","off","evts","liveEvents","_","unlistenTo","j"],"mappings":"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","file":"../Evented.js","sourcesContent":["define([\r\n    \"./klass\",\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(klass,arrays,objects,types){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    return Evented;\r\n\r\n})"]}