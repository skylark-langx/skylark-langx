{"version":3,"sources":["Deferred.js"],"names":["define","arrays","funcs","objects","PGLISTENERS","Symbol","slice","Array","prototype","proxy","makeArray","result","mixin","Promise","always","handler","this","then","done","fail","catch","Deferred","self","wrapPromise","promise","resolve","reject","_resolve","_reject","p","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","call","args","undefined","__ctx__","apply","push","pipe","value","arguments","resolveWith","context","_resolved","forEach","listener","error","reason","rejectWith","_rejected","callback","errback","progback","all","array","first","race","when","valueOrPromise","receivedPromise","nativePromise","length","deferred","cancel","err","immediate","data"],"mappings":"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","file":"../Deferred.js","sourcesContent":["define([\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function(handler) {\r\n            this.then(handler);\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return wrapPromise(Promise.all(array));\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n})"]}