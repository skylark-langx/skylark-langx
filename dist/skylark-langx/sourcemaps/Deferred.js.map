{"version":3,"sources":["Deferred.js"],"names":["define","arrays","funcs","objects","PGLISTENERS","Symbol","PGNOTIFIES","slice","Array","prototype","proxy","makeArray","result","mixin","Promise","always","handler","this","then","done","i","arguments","length","fail","catch","Deferred","self","wrapPromise","promise","resolve","reject","_resolve","_reject","p","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","call","args","undefined","__ctx__","apply","forEach","value","push","pipe","resolveWith","context","_resolved","notify","listener","error","reason","rejectWith","_rejected","callback","errback","progback","all","array","bind","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","data"],"mappings":"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","file":"../Deferred.js","sourcesContent":["define([\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners',\r\n         PGNOTIFIES = Symbol ? Symbol() : '__pgnotifies';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n        this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return wrapPromise(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }));\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGNOTIFIES].forEach(function (value) {\r\n                        handler(value);\r\n                    });\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        try {\r\n            this[PGNOTIFIES].push(value);\r\n\r\n            return this[PGLISTENERS].forEach(function (listener) {\r\n                return listener(value);\r\n            });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.done.apply(p,arguments);\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.fail(errback);\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});"]}