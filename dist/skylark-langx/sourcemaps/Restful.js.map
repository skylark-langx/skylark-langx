{"version":3,"sources":["Restful.js"],"names":["define","Evented","objects","strings","Xhr","mixin","substitute","inherit","klassName","idAttribute","getBaseUrl","args","baseEndpoint","this","baseUrl","server","basePath","undefined","_head","_get","get","_post","verb","url","post","_put","put","_delete","del","_patch","patch","query","params","retrieve","create","update","delete","init"],"mappings":";;;;;;;AAAAA,QACI,YACA,YACA,YACA,SACF,SAASC,EAAQC,EAAQC,EAAQC,GAC/B,IAAIC,EAAQH,EAAQG,MAChBC,EAAaH,EAAQG,WAyHzB,OAvHcL,EAAQM,SAClBC,UAAc,UAEdC,YAAe,KAEfC,WAAa,SAASC,GAElB,IAAIC,EAAeN,EAAWO,KAAKD,aAAaD,GAC5CG,EAAUD,KAAKE,OAASF,KAAKG,SAAWJ,EAI5C,YAH6BK,IAAzBN,EAAKE,KAAKJ,eACVK,EAAUA,EAAU,IAAMH,EAAKE,KAAKJ,cAEjCK,GAEXI,MAAQ,SAASP,KAQjBQ,KAAO,SAASR,GAOZ,OAAOP,EAAIgB,IAAIP,KAAKH,WAAWC,GAAMA,IAEzCU,MAAS,SAASV,EAAKW,GASnB,IAAIC,EAAMV,KAAKH,WAAWC,GAI1B,OAHIW,IACAC,EAAMA,EAAM,IAAMD,GAEflB,EAAIoB,KAAKD,EAAKZ,IAGzBc,KAAQ,SAASd,EAAKW,GASlB,IAAIC,EAAMV,KAAKH,WAAWC,GAI1B,OAHIW,IACAC,EAAMA,EAAM,IAAMD,GAEflB,EAAIsB,IAAIH,EAAKZ,IAGxBgB,QAAU,SAAShB,GASf,IAAIY,EAAMV,KAAKH,WAAWC,GAC1B,OAAOP,EAAIwB,IAAIL,IAGnBM,OAAS,SAASlB,GAQd,IAAIY,EAAMV,KAAKH,WAAWC,GAC1B,OAAOP,EAAI0B,MAAMP,EAAKZ,IAE1BoB,MAAO,SAASC,GAEZ,OAAOnB,KAAKQ,MAAMW,IAGtBC,SAAU,SAASD,GACf,OAAOnB,KAAKM,KAAKa,IAGrBE,OAAQ,SAASF,GACb,OAAOnB,KAAKQ,MAAMW,IAGtBG,OAAQ,SAASH,GACb,OAAOnB,KAAKY,KAAKO,IAGrBI,OAAQ,SAASJ,GAEb,OAAOnB,KAAKc,QAAQK,IAGxBF,MAAO,SAASE,GAEZ,OAAOnB,KAAKgB,OAAOG,IAEvBK,KAAM,SAASL,GACX3B,EAAMQ,KAAKmB","file":"../Restful.js","sourcesContent":["define([\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n})"]}