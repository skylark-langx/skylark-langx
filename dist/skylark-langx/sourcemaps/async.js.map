{"version":3,"sources":["async.js"],"names":["define","Deferred","objects","each","parallel","arr","args","ctx","rets","i","func","push","apply","all","series","d","p","promise","resolve","then","waterful","resolveWith"],"mappings":";;;;;;;AAAAA,QACI,aACA,aACF,SAASC,EAASC,GAChB,IAAIC,EAAOD,EAAQC,KAkDtB,OA/COC,SAAW,SAASC,EAAIC,EAAKC,GACzB,IAAIC,KAQJ,OAPAD,EAAMA,GAAO,KACbD,EAAOA,MAEPH,EAAKE,EAAI,SAASI,EAAEC,GAChBF,EAAKG,KAAKD,EAAKE,MAAML,EAAID,MAGtBL,EAASY,IAAIL,IAGxBM,OAAS,SAAST,EAAIC,EAAKC,GACvB,IAAIC,KACAO,EAAI,IAAId,EACRe,EAAID,EAAEE,QAaV,OAXAV,EAAMA,GAAO,KACbD,EAAOA,MAEPS,EAAEG,UACFf,EAAKE,EAAI,SAASI,EAAEC,GAChBM,EAAIA,EAAEG,KAAK,WACP,OAAOT,EAAKE,MAAML,EAAID,KAE1BE,EAAKG,KAAKK,KAGPf,EAASY,IAAIL,IAGxBY,SAAW,SAASf,EAAIC,EAAKC,GACzB,IAAIQ,EAAI,IAAId,EACRe,EAAID,EAAEE,QAUV,OARAV,EAAMA,GAAO,KACbD,EAAOA,MAEPS,EAAEM,YAAYd,EAAID,GAElBH,EAAKE,EAAI,SAASI,EAAEC,GAChBM,EAAIA,EAAEG,KAAKT,KAERM","file":"../async.js","sourcesContent":["define([\r\n    \"./Deferred\",\r\n    \"./objects\"\r\n],function(Deferred,objects){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});"]}